@article{Macenski_2022,
   title={Robot Operating System 2: Design, architecture, and uses in the wild},
   volume={7},
   ISSN={2470-9476},
   url={http://dx.doi.org/10.1126/scirobotics.abm6074},
   DOI={10.1126/scirobotics.abm6074},
   number={66},
   journal={Science Robotics},
   publisher={American Association for the Advancement of Science (AAAS)},
   author={Macenski, Steven and Foote, Tully and Gerkey, Brian and Lalancette, Chris and Woodall, William},
   year={2022},
   month=may }

@misc{Colledanchise_2018_old,
   title={Behavior Trees in Robotics and AI},
   ISBN={9780429950902},
   url={http://dx.doi.org/10.1201/9780429489105},
   DOI={10.1201/9780429489105},
   publisher={CRC Press},
   author={Colledanchise, Michele and Ögren, Petter},
   year={2018},
   month=jul }

@book{Colledanchise_2018,
  title={Behavior trees in robotics and AI: An introduction},
  author={Colledanchise, Michele and {\"O}gren, Petter},
  year={2018},
  publisher={CRC Press}
}

@misc{TFG_BT_Studio,
   title={Trabajo {F}in de {G}rado, {G}rado de {I}ng. {R}obótica {S}oftware, {U}niversidad {R}ey {J}uan {C}arlos "{BT} {S}tudio: un {IDE} web para la programación de aplicaciones robóticas con {B}ehavior {T}rees"},
   ISBN={9780429950902},
   url={https://gsyc.urjc.es/jmplaza/students/tfg-tools-btstudio-oscar_martinez-2024.pdf},
   publisher={URJC},
   author={Óscar Martínez Martínez},
   year={2024},
   month=may }


@Article{app10217419_old,
AUTHOR = {Cañas, José M. and Perdices, Eduardo and García-Pérez, Lía and Fernández-Conde, Jesús},
TITLE = {A ROS-Based Open Tool for Intelligent Robotics Education},
JOURNAL = {Applied Sciences},
VOLUME = {10},
YEAR = {2020},
NUMBER = {21},
ARTICLE-NUMBER = {7419},
URL = {https://www.mdpi.com/2076-3417/10/21/7419},
ISSN = {2076-3417},
ABSTRACT = {This paper presents an open-access platform for practical learning of intelligent robotics in engineering degrees: Robotics-Academy. It comprises a collection of exercises including recent service robot applications in real life, with different robots such as autonomous cars, drones or vacuum cleaners. It uses Robot Operating System (ROS) middleware, the de facto standard in robot programming, the 3D Gazebo simulator and the Python programming language. For each exercise, a software template has been developed, performing all the auxiliary tasks such as the graphical interface, connection to the sensors and actuators, timing of the code, etc. This also hosts the student’s code. Using this template, the student just focuses on the robot intelligence (for instance, perception and control algorithms) without wasting time on auxiliary details which have little educational value. The templates are coded as ROS nodes or as Jupyter Notebooks ready to use in the web browser. Reference solutions for illustrative purposes and automatic assessment tools for gamification have also been developed. An introductory course to intelligent robotics has been elaborated and its contents are available and ready to use at Robotics-Academy, including reactive behaviors, path planning, local/global navigation, and self-localization algorithms. Robotics-Academy provides a valuable complement to master classes in blended learning, massive online open courses (MOOCs) and online video courses, devoted to addressing theoretical content. This open educational tool connects that theory with practical robot applications and is suitable to be used in distance education. Robotics-Academy has been successfully used in several subjects on undergraduate and master’s degree engineering courses, in addition to a pre-university pilot course.},
DOI = {10.3390/app10217419}
}

@article{app10217419,
  title={A ROS-based open tool for intelligent robotics education},
  author={Ca{\~n}as, Jos{\'e} M and Perdices, Eduardo and Garc{\'\i}a-P{\'e}rez, L{\'\i}a and Fern{\'a}ndez-Conde, Jes{\'u}s},
  journal={Applied Sciences},
  volume={10},
  number={21},
  pages={7419},
  year={2020},
  publisher={MDPI}
}

@article{RoldanAlvarez2023_old,
  author    = {Roldán-Álvarez, David and Cañas, José M. and Valladares, David and Arias-Perez, Pedro and Mahna, Sakshay},
  title     = {Unibotics: open ROS-based online framework for practical learning of robotics in higher education},
  journal   = {Multimedia Tools and Applications},
  year      = {2023},
  date      = {2023/11/14},
  abstract  = {Robotics provides an increasing number of solutions for real-life problems, from autonomous driving to automatic cleaning, inspection and logistics. The demand of robotics education to train future engineers is also growing, both in regular degrees at universities and also in massive open online courses (MOOCs). Beyond theory lectures, robotics education typically requires hands-on and practiced robot programming to be effective and let the student develop the desired skills. This paper presents Unibotics, an open online learning platform that allows editing and running robot programs from the browser, and provides more than 20 academic units on service robotics, autonomous driving, drones, and mobile robotics. It uses state-of-the art open source robot simulator (Gazebo) and robot middleware (ROS), and so it is extensible with new exercises. It is intended as a tool for practical learning in robotics engineering university courses. The platform has been used by 130 students from four different university degrees. Furthermore, it has been experimentally validated at the Universidad Rey Juan Carlos (URJC) Master Degree in Computer Vision with 22 students.},
  issn      = {1573-7721},
  url       = {https://doi.org/10.1007/s11042-023-17514-z},
  doi       = {10.1007/s11042-023-17514-z},
  id        = {Roldán-Álvarez2023}
}

@article{RoldanAlvarez2023,
  title={Unibotics: open ROS-based online framework for practical learning of robotics in higher education},
  author={Rold{\'a}n-{\'A}lvarez, David and Ca{\~n}as, Jos{\'e} M and Valladares, David and Arias-Perez, Pedro and Mahna, Sakshay},
  journal={Multimedia Tools and Applications},
  volume={83},
  number={17},
  pages={52841--52866},
  year={2024},
  publisher={Springer}
}

@Inbook{White2017,
author="White, Ruffin
and Christensen, Henrik",
editor="Koubaa, Anis",
title="ROS and Docker",
bookTitle="Robot Operating System (ROS): The Complete Reference  (Volume 2)",
year="2017",
publisher="Springer International Publishing",
address="Cham",
pages="285--307",
abstract="In this tutorial chapter we'll cover the growing intersection between ROS and Docker, showcasing new development tools and strategies to advance robotic software design and deployment within a ROS/Gazebo context by utilizing advances in Linux containers. Tutorial examples here will focus on robotics software development for education, research, and industry, specifically: constructing repeatable and reproducible environments, leveraging software defined networking, as well as running and shipping portable ROS applications.",
isbn="978-3-319-54927-9",
doi="10.1007/978-3-319-54927-9_9",
url="https://doi.org/10.1007/978-3-319-54927-9_9"
}

@INPROCEEDINGS{7790647,
  author={Takaya, Kenta and Asai, Toshinori and Kroumov, Valeri and Smarandache, Florentin},
  booktitle={2016 20th International Conference on System Theory, Control and Computing (ICSTCC)}, 
  title={Simulation environment for mobile robots testing using ROS and Gazebo}, 
  year={2016},
  volume={},
  number={},
  pages={96-101},
  keywords={Robot sensing systems;Software;Robot kinematics;Object oriented modeling;Computational modeling;Mobile robots;Mobile robot simulation;3D mapping;ROS;Gazebo},
  doi={10.1109/ICSTCC.2016.7790647}}

@article{IOVINO2022104096,
title = {A survey of Behavior Trees in robotics and AI},
journal = {Robotics and Autonomous Systems},
volume = {154},
pages = {104096},
year = {2022},
issn = {0921-8890},
doi = {https://doi.org/10.1016/j.robot.2022.104096},
url = {https://www.sciencedirect.com/science/article/pii/S0921889022000513},
author = {Matteo Iovino and Edvards Scukins and Jonathan Styrud and Petter Ögren and Christian Smith},
keywords = {Behavior Trees, Robotics, Artificial Intelligence, Learning Behavior Trees},
abstract = {Behavior Trees (BTs) were invented as a tool to enable modular AI in computer games, but have received an increasing amount of attention in the robotics community in the last decade. With rising demands on agent AI complexity, game programmers found that the Finite State Machines (FSM) that they used scaled poorly and were difficult to extend, adapt and reuse. In BTs, the state transition logic is not dispersed across the individual states, but organized in a hierarchical tree structure, with the states as leaves. This has a significant effect on modularity, which in turn simplifies both synthesis and analysis by humans and algorithms alike. These advantages are needed not only in game AI design, but also in robotics, as is evident from the research being done. In this paper we present a comprehensive survey of the topic of BTs in Artificial Intelligence and Robotic applications. The existing literature is described and categorized based on methods, application areas and contributions, and the paper is concluded with a list of open research challenges.}
}

@article{doi:10.1146/annurev-control-042920-095314,
author = {\"{O}gren, Petter and Sprague, Christopher I.},
title = {Behavior Trees in Robot Control Systems},
journal = {Annual Review of Control, Robotics, and Autonomous Systems},
volume = {5},
number = {1},
pages = {81-107},
year = {2022},
doi = {10.1146/annurev-control-042920-095314},

URL = { 
    
        https://doi.org/10.1146/annurev-control-042920-095314
    
    

},
eprint = { 
    
        https://doi.org/10.1146/annurev-control-042920-095314
    
    

}
,
    abstract = { In this article, we provide a control-theoretic perspective on the research area of behavior trees in robotics. The key idea underlying behavior trees is to make use of modularity, hierarchies, and feedback in order to handle the complexity of a versatile robot control system. Modularity is a well-known tool to handle software complexity by enabling the development, debugging, and extension of separate modules without detailed knowledge of the entire system. A hierarchy of such modules is natural, since robot tasks can often be decomposed into a hierarchy of subtasks. Finally, feedback control is a fundamental tool for handling uncertainties and disturbances in any low-level control system, but in order to enable feedback control on the higher level, where one module decides what submodule to execute, information regarding the progress and applicability of each submodule needs to be shared in the module interfaces. We describe how these three concepts can be used in theoretical analysis, practical design, and extensions and combinations with other ideas from control theory and robotics. }
}

@ARTICLE{10106642,
  author={Ghzouli, Razan and Berger, Thorsten and Johnsen, Einar Broch and Wasowski, Andrzej and Dragule, Swaib},
  journal={IEEE Transactions on Software Engineering}, 
  title={Behavior Trees and State Machines in Robotics Applications}, 
  year={2023},
  volume={49},
  number={9},
  pages={4243-4267},
  keywords={Behavioral sciences;DSL;Robots;Robot kinematics;Analytical models;Libraries;Task analysis;Behavior trees;exploratory empirical study;robotics applications;state machines;usage patterns},
  doi={10.1109/TSE.2023.3269081}}



